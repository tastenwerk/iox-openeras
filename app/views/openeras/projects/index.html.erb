<%= content_for :add_js do %>
  <script type="text/javascript" src="/javascripts/3rdparty/ckeditor/ckeditor.js"></script>
  <%= javascript_include_tag "openeras/common" %>
<% end %>
<%= content_for :add_css do %>
  <%= stylesheet_link_tag "openeras/common", media: "all" %>
<% end %>

<div class="iox-sidebar">

  <div class="iox-sidebar-frame half-top">
  <h3 class="iox-sidebar-title"><%= t('openeras.labels.title') %></h3>
    <div class="labels-list-control iox-tree-control">
      <form>
        <input type="text" name="query" placeholder="<%= t('filter_results') %> " />
        <input type="submit" value="<%= t('search') %>" />
        <a href="#" data-tree-role="search" title="<%= t('filter_results') %>"><i class="icon-search"></i></a>
        <a href="#" data-tree-role="refresh" title="<%= t('refresh') %>"><i class="icon-refresh"></i></a>
        <a href="#" class="btn btn-success" data-tree-role="new" title="<%= t('webpage.new') %>"><i class="icon-plus"></i></a>

      </form>
    </div>

    <ul id="labels-list" class="openeras-labels-list"></ul>

  </div>

  <div class="iox-sidebar-frame half-bottom">
    <h3 class="iox-sidebar-title"><%= t('openeras.venues.title') %></h3>
    <div class="venues-list-control iox-tree-control">
      <form>
        <input type="text" name="query" placeholder="<%= t('filter_results') %> " />
        <input type="submit" value="<%= t('search') %>" />
        <a href="#" data-tree-role="search" title="<%= t('filter_results') %>"><i class="icon-search"></i></a>
        <a href="#" data-tree-role="refresh" title="<%= t('refresh') %>"><i class="icon-refresh"></i></a>
      </form>
    </div>

    <ul id="venues-list" class="openeras-venues-list"></ul>

  </div>

</div>

<div class="iox-content offset-sidebar">

  <div class="iox-content-frame">

    <div class="iox-grid-header clearfix">
      <a href="<%= new_project_path %>" class="new-project btn btn-success" data-tree-role="new" rel="tooltip"><%= t('openeras.project.new') %></a>
      <div class="query-container">
        <input type="text" class="query" id="projects-query" name="query" autocomplete="off" />
        <button class="clear-query"><i class="icon-remove"></i></button>
        <button id="submit-projects-query" class="submit-query"><i class="icon-search"></i></button>
      </div>
      <div class="options-container">
      </div>
    </div>

    <div id="events-grid" class="iox-k-grid"></div>

  </div>

</div>

<div class="iox-content offset-sidebar hide">
  <div class="iox-content-frame auto-overflow" data-bind="template: { name: 'project-tmpl' }"></div>
</div>

<%= render partial: 'project_form_tmpl' %>
<%= render partial: 'file_tmpl' %>

<script id="labels-tree-template" type="text/html">
  <li data-bind=" attr: { 'data-id': id, id: 'item_'+id }, click: filterProjectsByLabel">
    <div class="item clearfix" data-bind=" css: { selected: _selected, hide: _hide }">
      <div class="actions">
        <a href="#" data-bind="click: removeItem" class="remove-item" title="<%= t('delete') %>">
          <span class="icon-close"></span>
        </a>
      </div>
      <span class="color-ball" data-bind="attr: { style: 'background-color: '+color()+';' }"></span>
      <a class="title" data-bind="click: listContent, attr: { title: name }, text: name"></a>
    </div>
  </li>
</script>

<script id="venues-tree-template" type="text/html">
  <li data-bind=" attr: { 'data-id': id, id: 'item_'+id }, click: filterProjectsByVenue">
    <div class="item clearfix" data-bind=" css: { selected: _selected, hide: _hide }">
      <div class="actions">
        <a href="#" data-bind="click: removeItem" class="remove-item" title="<%= t('delete') %>">
          <span class="icon-close"></span>
        </a>
      </div>
      <a class="title" data-bind="click: listContent, attr: { title: name }, text: name"></a>
    </div>
  </li>
</script>

<script type="text/javascript">

  function selectedLabelId(){
    $label = $('#labels-list .item.selected').closest('li')
    if( $label.length )
      return $label.attr('data-id')
    return '';
  }

  $(document).ready( function(){


    /**
     * ---------------------------------------------------------
     * labels
     * ---------------------------------------------------------
     */
    $('#labels-list').ioxTree({
      url: '/openeras/labels/projects',
      deletionURL: '/openeras/labels',
      template: 'labels-tree-template',
      observe: ['name', 'color'],
      control: $('.labels-list-control'),
      i18n:{
        noEntriesFound: '<%= t('filter_no_entries_found') %>'
      },
      events: {
        afterRemove: function afterRemove( item ){
          $('#projects-query').val('');
          $('#submit-projects-query').click();
        },
        item: {

          /**
           * lists content of this item in a grid
           */
          listContent: function listContent( item, e ){
            console.log('list content');
          }

        },

        tree: {

          /**
           * ask for the new item's name
           * and create it immediately
           */
          newItemForm: function newItem( e, tree, TreeItem ){
            var name = prompt('<%= t('name') %>','');
            if( name && name.length > 0 ){

              var self = this;

              $.ajax({
                url: '/openeras/labels',
                data: { name: name, type: 'Openeras::ProjectLabel' },
                dataType: 'json',
                type: 'post'
              }).done( function( json ){
                if( json.success ){
                  var item = new TreeItem( json.item, tree );
                  if( item.parent_id ){
                    var $parentLi = $(self._master.obj).find('li[data-id='+item.parent_id+']');
                    var parent = ko.dataFor($parentLi.get(0));
                    if( $parentLi.find('.open-folder').length ){
                      if( $parentLi.find('.open-folder').length && $parentLi.find('.open-folder').hasClass('open') )
                        parent.children.push( item );
                      else
                        $parentLi.find('.open-folder').click();
                    } else{
                      $parentLi.find('.folder-spacer').addClass('open-folder').click();
                    }
                  } else
                    tree.items.push( item );
                }
                iox.flash.rails( json.flash );
              });

            }
          }

        }

      }
    });


    /**
     * ---------------------------------------------------------
     * venues
     * ---------------------------------------------------------
     */
    $('#venues-list').ioxTree({
      url: '/openeras/venues',
      template: 'venues-tree-template',
      observe: ['name', 'color'],
      control: $('.venues-list-control'),
      i18n:{
        noEntriesFound: '<%= t('filter_no_entries_found') %>'
      },
      events: {
        afterRemove: function afterRemove( item ){
          $('#projects-query').val('');
          $('#submit-projects-query').click();
        },
        item: {

          /**
           * lists content of this item in a grid
           */
          listContent: function listContent( item, e ){
            console.log('list content');
          }

        },

        tree: {

        }

      }
    });


    var kGrid = $("#events-grid").kendoGrid({
      columns: [
        { field: "published", title: "<span class='icon-check-circle'></span>", template: '<span class="publish-button #= published ? "icon-ok-sign" : "icon-ban-circle" #"></span>', width: 30 },
        { field: "title", title: "<%= t('openeras.project.title') %>" },
        { field: 'starts_at', title: '<%= t('openeras.project.starts_at') %>',
          format: '{0:dd.MM.yyyy}',
          width: 100
        },
        { field: 'ends_at', title: '<%= t('openeras.project.ends_at') %>',
          format: '{0:dd.MM.yyyy}',
          width: 100 },
        { field: "venue_name",
          title: "<%= t('openeras.project.venue_name') %>",
          sortable: false
        },
        { field: 'updated_at',
          title: "<%= t('updated_at') %>",
          format: '{0:dd.MM.yyyy HH:mm}',
          width: 120,
          attributes: {
            style: 'text-align: right'
          }
        },
        { command:
          [
            { name: 'editProject',
              text: '<i class="icon-edit"></i>',
              click: function(e){
                var $row = $(e.currentTarget).closest("tr");
                var dataItem = this.dataItem( $row );
                this.clearSelection();
                this.select( $row );
                iox.switchContent( 'next', function( $container ){
                  setupProjectForm( ko.toJS(dataItem), $container );
                });
              }
            },
            { name: 'deleteProject', text: '<i class="icon-remove"></i>',
              click: function(e){
                var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                $.ajax({
                  url: '<%= projects_path %>/'+ dataItem.id,
                  type: 'delete',
                  dataType: 'json'
                }).done( function(json){
                  iox.flash.rails(json.flash);
                  if( json.success )
                    kGrid.data('kendoGrid').removeRow( $(e.target).closest('tr') );
                }).fail( function(json){
                  iox.flash.rails(json.flash);
                });
              }
            }
          ],
          width: 90
        }
      ],
      dataSource: {
        type: "json",
        transport: {
          read: {
            url: "<%= projects_path %>",
            dataType: 'json',
            data: function(){
              return { 'labels.id': selectedLabelId() };
            }
          }
        },
        schema: {
          total: 'total',
          data: function(response) {
            return response.items;
          },
          model: {
            fields: {
              id: { type: 'number' },
              published: { type: 'boolean' },
              title: { type: 'string' },
              venue_name: { type: 'string' },
              starts_at: { type: 'date' },
              ends_at: { type: 'date' },
              updater_name: { type: 'string' },
              updated_at: { type: 'date', width: 110 }
            }
          }
        },
        serverPaging: true,
        serverFiltering: true,
        serverSorting: true,
        sort: { field: "updated_at", dir: "desc" }
      },
      height: $(window).height()-150,
      selectable: "multiple",
      resizable: true,
      navigatable: true,
      sortable: true,
      pageable: {
        refresh: true,
        pageSize: 30,
        pageSizes: [10, 30, 50, 100]
      }
    });

    setupProjectsList( kGrid );

    window.openeras = window.openeras || {};
    window.openeras.event_types = <%= raw Rails.configuration.openeras.event_types.to_json %>;

  });

</script>